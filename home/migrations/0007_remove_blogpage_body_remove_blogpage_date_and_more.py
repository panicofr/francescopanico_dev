# Generated by Django 4.1.5 on 2023-01-22 13:19

from django.db import migrations, models
import django.db.models.deletion
import wagtail.blocks
import wagtail.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    dependencies = [
        ("wagtailcore", "0078_referenceindex"),
        ("wagtailimages", "0024_index_image_file_hash"),
        ("home", "0006_blogpage_feed_image_blogpage_reading_minutes"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="blogpage",
            name="body",
        ),
        migrations.RemoveField(
            model_name="blogpage",
            name="date",
        ),
        migrations.RemoveField(
            model_name="blogpage",
            name="feed_image",
        ),
        migrations.RemoveField(
            model_name="blogpage",
            name="intro",
        ),
        migrations.RemoveField(
            model_name="blogpage",
            name="reading_minutes",
        ),
        migrations.CreateModel(
            name="BlogPostPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                ("date", models.DateField(verbose_name="Post date")),
                ("intro", models.CharField(max_length=250)),
                ("reading_minutes", models.PositiveIntegerField(default=5)),
                (
                    "body",
                    wagtail.fields.StreamField(
                        [
                            (
                                "heading",
                                wagtail.blocks.CharBlock(form_classname="title"),
                            ),
                            ("paragraph", wagtail.blocks.RichTextBlock()),
                            ("image", wagtail.images.blocks.ImageChooserBlock()),
                            (
                                "code",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "language",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("bash", "Bash/Shell"),
                                                    ("css", "CSS"),
                                                    ("diff", "diff"),
                                                    ("html", "HTML"),
                                                    ("javascript", "Javascript"),
                                                    ("json", "JSON"),
                                                    ("python", "Python"),
                                                    ("scss", "SCSS"),
                                                    ("yaml", "YAML"),
                                                ],
                                                help_text="Coding language",
                                                identifier="language",
                                                label="Language",
                                            ),
                                        ),
                                        (
                                            "code",
                                            wagtail.blocks.TextBlock(
                                                identifier="code", label="Code"
                                            ),
                                        ),
                                    ],
                                    label="Code",
                                ),
                            ),
                        ],
                        use_json_field=True,
                    ),
                ),
                (
                    "feed_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
    ]
